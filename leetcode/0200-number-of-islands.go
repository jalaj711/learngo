package main

func numIslands(grid [][]byte) int {
	a := 0
	m := len(grid)
	n := len(grid[0])
	s := 0
	bfs := make([][2]int, 0, 1)
	var front [2]int
	for i := 0; i < m; i++ {
		for j := 0; j < n; j++ {
			if grid[i][j] == '1' {
				a++
				bfs = append(bfs, [2]int{i, j})
				for len(bfs) > 0 {
					s = len(bfs)
					for s > 0 {
						front = bfs[0]
						grid[front[0]][front[1]] = '2'
						if front[0] > 0 && grid[front[0]-1][front[1]] == '1' {
							bfs = append(bfs, [2]int{front[0] - 1, front[1]})
							grid[front[0]-1][front[1]] = '2'
						}
						if front[0] < m-1 && grid[front[0]+1][front[1]] == '1' {
							bfs = append(bfs, [2]int{front[0] + 1, front[1]})
							grid[front[0]+1][front[1]] = '2'
						}
						if front[1] > 0 && grid[front[0]][front[1]-1] == '1' {
							bfs = append(bfs, [2]int{front[0], front[1] - 1})
							grid[front[0]][front[1]-1] = '2'
						}
						if front[1] < n-1 && grid[front[0]][front[1]+1] == '1' {
							bfs = append(bfs, [2]int{front[0], front[1] + 1})
							grid[front[0]][front[1]+1] = '2'
						}
						s--
						bfs = bfs[1:]
					}
				}
			}
		}
	}
	return a
}

//
//func main() {
//	grid := [][]byte{{'1', '1', '1', '1', '1', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '0', '1', '0', '1', '1'},
//		{'0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '0', '1', '1', '1', '1', '1', '0'},
//		{'1', '0', '1', '1', '1', '0', '0', '1', '1', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1'},
//		{'1', '1', '1', '1', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1'},
//		{'1', '0', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1'},
//		{'1', '0', '1', '1', '1', '1', '1', '1', '0', '1', '1', '1', '0', '1', '1', '1', '0', '1', '1', '1'},
//		{'0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '0', '1', '1', '0', '1', '1', '1', '1'},
//		{'1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '0', '1', '1', '1', '1', '0', '1', '1'},
//		{'1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1'},
//		{'1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1'},
//		{'0', '1', '1', '1', '1', '1', '1', '1', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1'},
//		{'1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1'},
//		{'1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1'},
//		{'1', '1', '1', '1', '1', '0', '1', '1', '1', '1', '1', '1', '1', '0', '1', '1', '1', '1', '1', '1'},
//		{'1', '0', '1', '1', '1', '1', '1', '0', '1', '1', '1', '0', '1', '1', '1', '1', '0', '1', '1', '1'},
//		{'1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '0', '1', '1', '1', '1', '1', '1', '0'},
//		{'1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '0', '1', '1', '1', '1', '0', '0'},
//		{'1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1'},
//		{'1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1'},
//		{'1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1'}}
//	numIslands(grid)
//}
